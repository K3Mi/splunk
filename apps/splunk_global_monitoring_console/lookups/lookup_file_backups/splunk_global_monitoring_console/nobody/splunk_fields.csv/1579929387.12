Index,Sourcetype,Field_Name,Field_Display_Name,Field_Description
Search job inspector,Execution costs of dispatched searches,dispatch.check_disk_usage,Undefined,The time spent checking the disk usage of this job.
Search job inspector,Execution costs of dispatched searches,dispatch.createdSearchResultInfrastructure,Undefined,The time to create and set up the collectors for each peer and execute the HTTP post to each peer.
Search job inspector,Execution costs of dispatched searches,dispatch.earliest_time,Undefined,Specifies the earliest time for this search. Can be a relative or absolute time. The default is an empty string.
Search job inspector,Execution costs of dispatched searches,dispatch.emit_prereport_files,Undefined,"When running a transforming search, Splunk Enterprise cannot compute the statistical results of the report until the search completes. After it fetches events from the search peers (dispatch.fetch), it, writes out the results to local files. dispatch.emit_prereport_files provides the time that it takes for Splunk Enterprise to write the transforming search results to those local files."
Search job inspector,Execution costs of dispatched searches,dispatch.evaluate,Undefined,"The time spent parsing the search and setting up the data structures needed to run the search.  This component also includes the time it takes to evaluate and run subsearches. This is broken down further for each search command that is used. In general, dispatch.evaluate.<command_name> tells you the time spent parsing and evaluating the <command_name> argument. For example, dispatch.evaluate.search indicates the time spent evaluating and parsing the searchcommand argument."
Search job inspector,Execution costs of dispatched searches,dispatch.fetch,Undefined,"The time spent by the search head waiting for or fetching events from search peers. The dispatch.fetch value is different than the command.search value.  The command.search value includes time spent by all indexers, which can be greater than the actual elapsed time of the search. If you have only a single node, then the dispatch.fetch and the command.search values will be similar. In a distributed environment, depending on the search, these values can be very different."
Search job inspector,Execution costs of dispatched searches,dispatch.preview,Undefined,The time spent generating preview results.
Search job inspector,Execution costs of dispatched searches,dispatch.process_remote_timeline,Undefined,The time spent decoding timeline information generated by search peers.
Search job inspector,Execution costs of dispatched searches,dispatch.reduce,Undefined,The time spend reducing the intermediate report output.
Search job inspector,Execution costs of dispatched searches,dispatch.stream.local,Undefined,The time spent by search head on the streaming part of the search.
Search job inspector,Execution costs of dispatched searches,dispatch.stream.remote,Undefined,"The time spent executing the remote search in a distributed search environment, aggregated across all peers. Additionally, the time spent executing the remote search on each remote search peer is indicated with: dispatch.stream.remote.<search_peer_name>. output_count represents bytes sent rather than events in this case."
Search job inspector,Execution costs of dispatched searches,dispatch.timeline,Undefined,The time spent generating the timeline and fields sidebar information.
Search job inspector,Execution costs of dispatched searches,dispatch.writeStatus,Undefined,The time spent periodically updating status.csv and info.csv in the job's dispatch directory.
Search job inspector,Execution costs of dispatched searches,startup.handoff,Undefined,"The time elapsed between the forking of a separate search process and the beginning of useful work of the forked search processes. In other words it is the approximate time it takes to build the search apparatus. This is cumulative across all involved peers. If this takes a long time, it could be indicative of I/O issues with .conf files or the dispatch directory."
Search job inspector,Execution costs of search commands,command.search,Undefined,"After the Splunk software identifies the events that contain the indexed fields matching your search, the events are analyzed to identify which events match the other search criteria. These are concurrent operations, not consecutive."
Search job inspector,Execution costs of search commands,command.search.filter,Undefined,"tells how long it took to filter out events that do not match, for example fields and phrases."
Search job inspector,Execution costs of search commands,command.search.index,Undefined,"tells how long it took to look into the TSIDX files for the location to
  read in the raw data. This is the time spent identifying, from the tokens in
  the base search, what events to retrieve."
Search job inspector,Execution costs of search commands,command.search.kv,Undefined,tells how long it took to apply field extractions to the events.command.
Search job inspector,Execution costs of search commands,command.search.lookups,Undefined,tells how long it took to create new fields based on existing fields (perform field lookups).
Search job inspector,Execution costs of search commands,command.search.rawdata,Undefined,tells how long it took to read the actual events from the rawdata files.
Search job inspector,Execution costs of search commands,command.search.tags,Undefined,tells how long it took to assign tags to events.
Search job inspector,Execution costs of search commands,command.search.typer,Undefined,tells how long it took to assign event types to events
Search job inspector,Execution costs of search commands,search.fieldalias,Undefined,tells how long it took to rename fields based according to props.conf..
Search job inspector,Search job properties,Additional info,Undefined,"Links to further information about your search. These links may not always be available
timeline
field summary
search.log"
Search job inspector,Search job properties,cursorTime,Undefined,The earliest time from which no events are later scanned. Can be used to indicate progress. See description for doneProgress.
Search job inspector,Search job properties,delegate,Undefined,"For saved searches, specifies jobs that were started by the user. Defaults to scheduler."
Search job inspector,Search job properties,diskUsage,Undefined,"The total amount of disk space used, in bytes."
Search job inspector,Search job properties,dispatchState,Undefined,"The state of the search. Can be any of QUEUED, PARSING, RUNNING, PAUSED, FINALIZING, FAILED, or DONE."
Search job inspector,Search job properties,doneProgress,Undefined,A number between 0 and 1.0 that indicates the approximate progress of the search.doneProgress = (latestTime – cursorTime) / (latestTime – earliestTime)
Search job inspector,Search job properties,dropCount,Undefined,"For real-time searches only, the number of possible events that were dropped due to the rt_queue_size (defaults to 100000)."
Search job inspector,Search job properties,eai:acl,Undefined,"Describes the app and user-level permissions. For example, is the app shared globally, and what users can run or view the search?"
Search job inspector,Search job properties,earliestTime,Undefined,The earliest time a search job is configured to start. Can be used to indicate progress. See description for doneProgress.
Search job inspector,Search job properties,eventAvailableCount,Undefined,The number of events that are available for export.
Search job inspector,Search job properties,eventCount,Undefined,"The number of events returned by the search. In other words, this is the subset of scanned events (represented by the scanCount) that actually matches the search terms."
Search job inspector,Search job properties,eventFieldCount,Undefined,The number of fields found in the search results.
Search job inspector,Search job properties,eventIsStreaming,Undefined,Indicates if the events of this search are being streamed.
Search job inspector,Search job properties,eventIsTruncated,Undefined,"Indicates if events of the search have not been stored, and thus not available from the events endpoint for the search."
Search job inspector,Search job properties,eventSearch,Undefined,Subset of the entire search that is before any transforming commands. The timeline and events endpoint represents the result of this part of the search.
Search job inspector,Search job properties,eventSorting,Undefined,"Indicates if the events of this search are sorted, and in which order. asc = ascending; desc = descending; none = not sorted"
Search job inspector,Search job properties,isBatchMode,Undefined,Indicates whether or not the search in running in batch mode. This applies only to searches that include transforming commands.
Search job inspector,Search job properties,isDone,Undefined,Indicates if the search has completed.
Search job inspector,Search job properties,isFailed,Undefined,"Indicates if there was a fatal error executing the search.  For example, if the search string had invalid syntax."
Search job inspector,Search job properties,isFinalized,Undefined,Indicates if the search was finalized (stopped before completion).
Search job inspector,Search job properties,isPaused,Undefined,Indicates if the search has been paused.
Search job inspector,Search job properties,isPreviewEnabled,Undefined,Indicates if previews are enabled.
Search job inspector,Search job properties,isRealTimeSearch,Undefined,Indicates if the search is a real time search.
Search job inspector,Search job properties,isRemoteTimeline,Undefined,Indicates if the remote timeline feature is enabled.
Search job inspector,Search job properties,isSaved,Undefined,"Indicates that the search job is saved, storing search artifacts on disk for 7 days from the last time that the job has been viewed or touched. Add or edit the default_save_ttl value in limits.conf to override the default value of 7 days."
Search job inspector,Search job properties,isSavedSearch,Undefined,Indicates if this is a saved search run using the scheduler.
Search job inspector,Search job properties,isTimeCursored,Undefined,Specifies if the cursorTime can be trusted or not. Typically this parameter it set to true if the first command is search.
Search job inspector,Search job properties,isZombie,Undefined,"Indicates if the process running the search is dead, but with the search not finished."
Search job inspector,Search job properties,keywords,Undefined,All positive keywords used by this search. A positive keyword is a keyword that is not in a NOT clause.
Search job inspector,Search job properties,label,Undefined,Custom name created for this search.
Search job inspector,Search job properties,latestTime,Undefined,The latest time a search job is configured to start. Can be used to indicate progress. See description for doneProgress.
Search job inspector,Search job properties,messages,Undefined,Errors and debug messages.
Search job inspector,Search job properties,numPreviews,Undefined,Number of previews that have been generated so far for this search job.
Search job inspector,Search job properties,optimizedSearch,Undefined,"The restructured syntax for the search that was run. The built-in optimizers analyze your search and restructure the search syntax, where possible, to improve search performance. The search that you ran is displayed under the search job property."
Search job inspector,Search job properties,performance,Undefined,This is another representation of the Execution costs.
Search job inspector,Search job properties,remoteSearch,Undefined,The search string that is sent to every search peer.
Search job inspector,Search job properties,reportSearch,Undefined,"If reporting commands are used, the reporting search."
Search job inspector,Search job properties,request,Undefined,GET arguments that the search sends to splunkd.
Search job inspector,Search job properties,resultCount,Undefined,The total number of results returned by the search.
Search job inspector,Search job properties,resultIsStreaming,Undefined,"Indicates if the final results of the search are available using streaming (for example, no transforming operations)."
Search job inspector,Search job properties,resultPreviewCount,Undefined,The number of result rows in the latest preview results.
Search job inspector,Search job properties,runDuration,Undefined,Time in seconds that the search took to complete.
Search job inspector,Search job properties,scanCount,Undefined,The number of events that are scanned or read off disk.
Search job inspector,Search job properties,search,Undefined,The search string.
Search job inspector,Search job properties,searchCanBeEventType,Undefined,"If the search can be saved as an event type, this will be 1, otherwise, 0.Only base searches (no subsearches or pipes) can be saved as event types."
Search job inspector,Search job properties,searchProviders,Undefined,A list of all the search peers that were contacted.
Search job inspector,Search job properties,sid,Undefined,The search ID number.
Search job inspector,Search job properties,statusBuckets,Undefined,Maximum number of timeline buckets.
Search job inspector,Search job properties,ttl,Undefined,"The time to live, or time before the search job expires after it completes."
_audit,audittrail,Search_StartUp_Time_Average_Time(ms),Undefined,Average time for preprocessing before search startup. Counted from time search state is set to RUNNING.
_audit,audittrail,Search_StartUp_Time_Max_Time(ms),Undefined,Maximum time for preprocessing before search startup. Counted from time search state is set to RUNNING.
_audit,audittrail,_time,Time,The time that the search was started.
_audit,audittrail,api_et,Undefined,"The earliest time of the API call, which is the earliest time for which events were requested."
_audit,audittrail,api_lt,Undefined,"The latest time of the API call, which is the latest time for which events were requested."
_audit,audittrail,available_count,Available Count,The number of events that are available for export.
_audit,audittrail,considered_events,Considered Events,Undefined
_audit,audittrail,datamodel,Datamodel,Derived from savedsearch_name
_audit,audittrail,decompressed_slices,Decompressed Slices,Undefined
_audit,audittrail,drop_count,Undefined,"In real-time searches only, the number of possible events dropped due to queue size."
_audit,audittrail,eliminated_buckets,eliminated_buckets,Undefined
_audit,audittrail,event_count,Event Count,"If the search retrieved or generated events, the count of events returned with the search."
_audit,audittrail,exec_time,Dispatch Time,The execution time of the search in integer quantity of seconds into the Unix epoch.
_audit,audittrail,is_realtime,IS Realtime,Indicates whether the search was real-time (1) or historical (0).
_audit,audittrail,result_count,Result Count,"If the search is a transforming search, the count of results for the search."
_audit,audittrail,roles,Roles,Undefined
_audit,audittrail,savedsearch_name,Savedsearch Name,Undefined
_audit,audittrail,scan_count,Scan Count,The number of events retrieved from a Splunk index at a low level.
_audit,audittrail,search,Search,The search string.
_audit,audittrail,search_et,Search ET,The earliest time set for the search to run.
_audit,audittrail,search_lt,Search LT,The latest time set for the search to run.
_audit,audittrail,search_startup_time,Search Startup Time,"Startup time indicates that parsing is complete and the distributed search infrastructure is set up. At startup, Splunk software is ready to wait for responses from indexers."
_audit,audittrail,searched_buckets,Searched Buckets,Undefined
_audit,audittrail,sid,Undefined,The search job ID.
_audit,audittrail,splunk_server,Undefined,The host name of the machine where the search was run.
_audit,audittrail,status,Undefined,The status of the search.
_audit,audittrail,total_run_time,Total Run Time,The total time it took to run the search in seconds.
_audit,audittrail,total_slices,Total Slices,Undefined
_internal,scheduler,_time,Time,The time that the search was started.
_internal,scheduler,alert_actions,Alert Actions,Undefined
_internal,scheduler,app,App,App name
_internal,scheduler,concurrency_category,Concurrency Category,Undefined
_internal,scheduler,concurrency_context,Concurrency Context,Undefined
_internal,scheduler,concurrency_limit,Concurrency Limit,Undefined
_internal,scheduler,dispatch_time,Dispatch Time,Undefined
_internal,scheduler,priority,Priority,Undefined
_internal,scheduler,reason,Reason,Undefined
_internal,scheduler,result_count,Result Count,Undefined
_internal,scheduler,run_time,Total Run Time,Undefined
_internal,scheduler,savedsearch_id,Savedsearch ID,Undefined
_internal,scheduler,savedsearch_name,Savedsearch Name,Undefined
_internal,scheduler,scheduled_time,Scheduled Time,Undefined
_internal,scheduler,search_type,Search Type,"Derived from search_type, savedsearch_name, alert_actions & search_id"
_internal,scheduler,sid,Search ID,Undefined
_internal,scheduler,skipped_count,Skipped Count,Undefined
_internal,scheduler,status,info,Undefined
_internal,scheduler,user,User,Undefined
_internal,scheduler,window_time,Window Time,Undefined
_introspection,splunk_resource_usage,acceleration_id,Undefined,Acceleration ID
_introspection,splunk_resource_usage,data.search_props.app,App,App name
_introspection,splunk_resource_usage,args,Undefined,Non-search process arguments.
_introspection,splunk_resource_usage,cpu_system_time,Undefined,Cumulative time this process has spent executing in kernel (incl. system calls). Extra field.
_introspection,splunk_resource_usage,cpu_user_time,Undefined,Cumulative time this process has spent executing in user space (incl. library functions). Extra field.
_introspection,splunk_resource_usage,data.elapsed,Total Run Time,"Elapsed wall time, accurate to within the collection period."
_introspection,splunk_resource_usage,data.fd_used,FD Used,Number of currently open files used by this process.
_introspection,splunk_resource_usage,data.mem_used,Memory Used,"Current amount of resident physical memory used (KB).  (Usually far less deceiving than virtual memory because operating systems can be liberal with virtual memory size but never with resident memory size.) On Windows, mem_used is obtained by reading the WorkingSetSize property returned by the GetProcessMemoryInfo() function (see GetProcessMemoryInfo function and PROCESS_MEMORY_COUNTERS structure)."
_introspection,splunk_resource_usage,data.normalized_pct_cpu,Normalized CPU %,Percentage of CPU usage across all cores. 100% is equivalent to all CPU resources on the machine.
_introspection,splunk_resource_usage,data.page_faults,Page Faults,Number of major page faults. Extra field.
_introspection,splunk_resource_usage,data.pct_cpu,CPU %,"Percentage of CPU usage, relative to one core. 100% is equivalent to 1 core."
_introspection,splunk_resource_usage,data.pid,PID,Process ID.
_introspection,splunk_resource_usage,data.read_mb,Read MB,"Amount of data read (MB), excluding cache reads."
_introspection,splunk_resource_usage,data.scan_count,Scan Count,Undefined
_introspection,splunk_resource_usage,data.search_props.acceleration_id,Acceleration ID,Undefined
_introspection,splunk_resource_usage,data.search_props.label,Savedsearch Name,Human-readable label for the saved search.
_introspection,splunk_resource_usage,data.search_props.sid,Search ID,Undefined
_introspection,splunk_resource_usage,mem_unshared_data_used,Undefined,Amount of heap and stack used. Not available on Windows. Extra field.
_introspection,splunk_resource_usage,mode,Undefined,"One of the following search
  modes.
  historical
  historical batch
  RT
  RT indexed"
_introspection,splunk_resource_usage,pct_memory,Memory %,Percentage of physical memory used hostwide ((mem_used/available_host_memory) * 100).
_introspection,splunk_resource_usage,ppid,Undefined,Parent process ID. Not available for all processes.
_introspection,splunk_resource_usage,process,Undefined,Process name. The .exe suffix is stripped on Windows operating systems.
_introspection,splunk_resource_usage,data.search_props.provenance,Provenance,"One of the following search sources: cli, rest, ui:<App>:<View>"
_introspection,splunk_resource_usage,role,Undefined,Splunk Enterprise platform role. Either head or peer.
_introspection,splunk_resource_usage,delta_scan_count,Delta Scan Count,Event scan count for running process. Available only in Linux systems. This property is offered experimentally and might be changed or removed in a future release.
_introspection,splunk_resource_usage,data.search_props.search_head,Search Head,Dispatching search head for processes running saved searches.
_introspection,splunk_resource_usage,sid,Undefined,Search ID (SID).
_introspection,splunk_resource_usage,status,Undefined,"Status from the OS scheduler. Can be R (runnable or running), W (waiting), stopped, Z (zombie), or O (other). W includes voluntary sleep or blocking on I/O. O means status is knowable but does not fit into one of those categories. Not available on Windows."
_introspection,splunk_resource_usage,t_count,Undefined,Current number of threads.
_introspection,splunk_resource_usage,data.search_props.type,Search Type,"One of the following search types.
    ad-hoc
    datamodel acceleration
    other
    report acceleration
    scheduled
    summary indexing"
_introspection,splunk_resource_usage,data.search_props.user,User,Splunk username who initiated the search
_introspection,splunk_resource_usage,data.written_mb,Written MB,"Amount of data written (MB), excluding canceled writes."
