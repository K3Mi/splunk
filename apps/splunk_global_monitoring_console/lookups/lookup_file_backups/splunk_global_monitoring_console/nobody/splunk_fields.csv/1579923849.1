Index,Sourcetype,Field_Name,Field_Description
_introspection,splunk_resource_usage,args,Non-search process arguments.
_introspection,splunk_resource_usage,cpu_system_time,Cumulative time this process has spent executing in kernel (incl. system calls). Extra field.
_introspection,splunk_resource_usage,cpu_user_time,Cumulative time this process has spent executing in user space (incl. library functions). Extra field.
_introspection,splunk_resource_usage,elapsed,"Elapsed wall time, accurate to within the collection period."
_introspection,splunk_resource_usage,fd_used,Number of currently open files used by this process.
_introspection,splunk_resource_usage,label,Human-readable label for the saved search.
_introspection,splunk_resource_usage,mem_unshared_data_used,Amount of heap and stack used. Not available on Windows. Extra field.
_introspection,splunk_resource_usage,mem_used,"Current amount of resident physical memory used (KB).  (Usually far less deceiving than virtual memory because operating systems can be liberal with virtual memory size but never with resident memory size.) On Windows, mem_used is obtained by reading the WorkingSetSize property returned by the GetProcessMemoryInfo() function (see GetProcessMemoryInfo function and PROCESS_MEMORY_COUNTERS structure)."
_introspection,splunk_resource_usage,normalized_pct_cpu,Percentage of CPU usage across all cores. 100% is equivalent to all CPU resources on the machine.
_introspection,splunk_resource_usage,page_faults,Number of major page faults. Extra field.
_introspection,splunk_resource_usage,pct_cpu,"Percentage of CPU usage, relative to one core. 100% is equivalent to 1 core."
_introspection,splunk_resource_usage,pct_memory,Percentage of physical memory used hostwide ((mem_used/available_host_memory) * 100).
_introspection,splunk_resource_usage,pid,Process ID.
_introspection,splunk_resource_usage,ppid,Parent process ID. Not available for all processes.
_introspection,splunk_resource_usage,process,Process name. The .exe suffix is stripped on Windows operating systems.
_introspection,splunk_resource_usage,read_mb,"Amount of data read (MB), excluding cache reads."
_introspection,splunk_resource_usage,search_head,Dispatching search head for processes running saved searches.
_introspection,splunk_resource_usage,acceleration_id,Acceleration ID
_introspection,splunk_resource_usage,app,App name
_introspection,splunk_resource_usage,mode,"One of the following search
  modes.
  historical
  historical batch
  RT
  RT indexed"
_introspection,splunk_resource_usage,provenance,"One of the following search sources: cli, rest, ui:<App>:<View>"
_introspection,splunk_resource_usage,role,Splunk Enterprise platform role. Either head or peer.
_introspection,splunk_resource_usage,scan_count,Event scan count for running process. Available only in Linux systems. This property is offered experimentally and might be changed or removed in a future release.
_introspection,splunk_resource_usage,delta_scan_count,Delta event scan count for running process. Available only in Linux systems. This property is offered experimentally and might be changed or removed in a future release.
_introspection,splunk_resource_usage,sid,Search ID (SID).
_introspection,splunk_resource_usage,type,"One of the following search types.
    ad-hoc
    datamodel acceleration
    other
    report acceleration
    scheduled
    summary indexing"
_introspection,splunk_resource_usage,user,Splunk username who initiated the search
_introspection,splunk_resource_usage,status,"Status from the OS scheduler. Can be R (runnable or running), W (waiting), stopped, Z (zombie), or O (other). W includes voluntary sleep or blocking on I/O. O means status is knowable but does not fit into one of those categories. Not available on Windows."
_introspection,splunk_resource_usage,t_count,Current number of threads.
_introspection,splunk_resource_usage,written_mb,"Amount of data written (MB), excluding canceled writes."
_audit,audittrail,_time,The time that the search was started.
_audit,audittrail,api_et,"The earliest time of the API call, which is the earliest time for which events were requested."
_audit,audittrail,api_lt,"The latest time of the API call, which is the latest time for which events were requested."
_audit,audittrail,event_count,"If the search retrieved or generated events, the count of events returned with the search."
_audit,audittrail,exec_time,The execution time of the search in integer quantity of seconds into the Unix epoch.
_audit,audittrail,is_realtime,Indicates whether the search was real-time (1) or historical (0).
_audit,audittrail,result_count,"If the search is a transforming search, the count of results for the search."
_audit,audittrail,scan_count,The number of events retrieved from a Splunk index at a low level.
_audit,audittrail,search,The search string.
_audit,audittrail,search_et,The earliest time set for the search to run.
_audit,audittrail,search_lt,The latest time set for the search to run.
_audit,audittrail,sid,The search job ID.
_audit,audittrail,splunk_server,The host name of the machine where the search was run.
_audit,audittrail,status,The status of the search.
_audit,audittrail,total_run_time,The total time it took to run the search in seconds.
_audit,audittrail,search_startup_time,"Startup time indicates that parsing is complete and the distributed search infrastructure is set up. At startup, Splunk software is ready to wait for responses from indexers."
_audit,audittrail,Search_StartUp_Time_Average_Time(ms),Average time for preprocessing before search startup. Counted from time search state is set to RUNNING.
_audit,audittrail,Search_StartUp_Time_Max_Time(ms),Maximum time for preprocessing before search startup. Counted from time search state is set to RUNNING.
Search job inspector,n/a,command.search,"After the Splunk software identifies the events that contain the indexed fields matching your search, the events are analyzed to identify which events match the other search criteria. These are concurrent operations, not consecutive.

    command.search.index - tells how long it took to look into the TSIDX files for the location to read in the raw data. This is the time spent identifying, from the tokens in the base search, what events to retrieve.
    command.search.rawdata - tells how long it took to read the actual events from the rawdata files.
    command.search.typer - tells how long it took to assign event types to events.
    command.search.kv - tells how long it took to apply field extractions to the events.
    command.search.fieldalias - tells how long it took to rename fields based according to props.conf.
    command.search.lookups - tells how long it took to create new fields based on existing fields (perform field lookups).
    command.search.filter - tells how long it took to filter out events that do not match, for example fields and phrases.
    command.search.tags - tells how long it took to assign tags to events."
Search job inspector,n/a,dispatch.check_disk_usage,The time spent checking the disk usage of this job.
Search job inspector,n/a,dispatch.createdSearchResultInfrastructure,The time to create and set up the collectors for each peer and execute the HTTP post to each peer.
Search job inspector,n/a,dispatch.earliest_time,Specifies the earliest time for this search. Can be a relative or absolute time. The default is an empty string.
Search job inspector,n/a,dispatch.emit_prereport_files,"When running a transforming search, Splunk Enterprise cannot compute the statistical results of the report until the search completes. After it fetches events from the search peers (dispatch.fetch), it, writes out the results to local files. dispatch.emit_prereport_files provides the time that it takes for Splunk Enterprise to write the transforming search results to those local files."
Search job inspector,n/a,dispatch.evaluate,"The time spent parsing the search and setting up the data structures needed to run the search.  This component also includes the time it takes to evaluate and run subsearches. This is broken down further for each search command that is used. In general, dispatch.evaluate.<command_name> tells you the time spent parsing and evaluating the <command_name> argument. For example, dispatch.evaluate.search indicates the time spent evaluating and parsing the searchcommand argument."
Search job inspector,n/a,dispatch.fetch,"The time spent by the search head waiting for or fetching events from search peers. The dispatch.fetch value is different than the command.search value.  The command.search value includes time spent by all indexers, which can be greater than the actual elapsed time of the search. If you have only a single node, then the dispatch.fetch and the command.search values will be similar. In a distributed environment, depending on the search, these values can be very different."
Search job inspector,n/a,dispatch.preview,The time spent generating preview results.
Search job inspector,n/a,dispatch.process_remote_timeline,The time spent decoding timeline information generated by search peers.
Search job inspector,n/a,dispatch.reduce,The time spend reducing the intermediate report output.
Search job inspector,n/a,dispatch.stream.local,The time spent by search head on the streaming part of the search.
Search job inspector,n/a,dispatch.stream.remote,"The time spent executing the remote search in a distributed search environment, aggregated across all peers. Additionally, the time spent executing the remote search on each remote search peer is indicated with: dispatch.stream.remote.<search_peer_name>. output_count represents bytes sent rather than events in this case."
Search job inspector,n/a,dispatch.timeline,The time spent generating the timeline and fields sidebar information.
Search job inspector,n/a,dispatch.writeStatus,The time spent periodically updating status.csv and info.csv in the job's dispatch directory.
Search job inspector,n/a,startup.handoff,"The time elapsed between the forking of a separate search process and the beginning of useful work of the forked search processes. In other words it is the approximate time it takes to build the search apparatus. This is cumulative across all involved peers. If this takes a long time, it could be indicative of I/O issues with .conf files or the dispatch directory."
